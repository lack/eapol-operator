#!/bin/bash
#
# Calling convention:
#
# script $iface $eventname [$macaddr]
#
IFACE=$1
EVENT=$2
MAC=$3

log() {
    echo "[hostapd.actions] $@"
}

unprotectPorts() {
    local proto=$1
    local ports="$@"
    if [[ -n $ports ]]; then
        log "$IFACE initialization: Allowing unprotected $proto ports $ports"
        for port in $ports; do
            tc filter add dev $IFACE ingress pref 9999 protocol ip u32 match "$proto" dst "$port" 0xffff action ok index 99
            tc filter add dev $IFACE ingress pref 9999 protocol ipv6 u32 match "$proto" dst "$port" 0xffff action ok index 99
        done
    fi
}

case ${EVENT:-NOTANEVENT} in
__INIT__)
    log "$IFACE initialization: restricting all traffic"
    tc qdisc del dev $IFACE ingress >/dev/null 2>&1
    tc qdisc del dev $IFACE clsact >/dev/null 2>&1
    tc qdisc add dev $IFACE clsact
    unprotectPorts "tcp" $UNPROTECTED_TCP_PORTS
    unprotectPorts "udp" $UNPROTECTED_UDP_PORTS
    tc filter add dev $IFACE ingress pref 10000 protocol 0x888e matchall action ok index 100
    tc filter add dev $IFACE ingress pref 10001 protocol all matchall action drop index 101
    # TODO: Also make sure all associated VFs are down
    ;;
AP-STA-CONNECTED | CTRL-EVENT-EAP-SUCCESS)
    log "$IFACE: allow traffic from $MAC"
    tc filter replace dev $IFACE ingress pref 9000 protocol all flower src_mac $MAC action ok
    # TODO: Bring up all associated VFs
    ;;
AP-STA-DISCONNECTED | CTRL-EVENT-EAP-FAILURE)
    log "$IFACE: disallow traffic from $MAC"
    # TODO: Take down all associated VFs
    tc filter del dev $IFACE ingress pref 9000 protocol all flower
    ;;
*)
    log "$IFACE: ignoring event $EVENT"
    ;;
esac
